import type { NextPage } from 'next'
import Head from 'next/head'
import { ChangeEvent, useState } from 'react';
import Card from '../components/card';
import Layout from '../components/layout';
import { BASE_URL } from '../config';
import { SmiteGod } from '../models/smite.god';
import styles from '../styles/Home.module.css'

export interface HomeProps {
  smiteGods: SmiteGod[];
  roles: string[];
}

const Home: NextPage<HomeProps> = ({ smiteGods, roles }) => {
  const [index, setIndex] = useState(0);
  const current = smiteGods[index];
  const [role, setRole] = useState("Any");

  function randomize() {
    const availableIndices = smiteGods.reduce((indices: number[], smiteGod: SmiteGod, currentIndex: number) => {
      if ((role === "Any" || smiteGod.Roles.includes(role)) && index !== currentIndex) {
        indices.push(currentIndex);
      }
      return indices;
    }, []);
    const randomIndex = Math.floor(Math.random() * availableIndices.length);
    setIndex(availableIndices[randomIndex]);
  }

  function onChangeRole(event: ChangeEvent<HTMLSelectElement>) {
    const { value } = event.target;
    setRole(value);
  }

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Card>
          <Card.Background imageURL={current.godCard_URL}>
            <h1>{current.Name}</h1>
            <p>{current.Title}</p>
            <p>{current.Pantheon}</p>
          </Card.Background>
        </Card>
          <button type="button" onClick={randomize}>Randomize</button>
          <select name="role" id="role" onChange={onChangeRole} defaultValue={role}>
            {roles.map((role: string) => (
              <option key={role} value={role}>{role}</option>
            ))}
          </select>
      </main>
    </Layout>
  )
}

export default Home

export async function getStaticProps() {
  const res = await fetch(`${BASE_URL}/api/smite/gods`);
  const smiteGods = await res.json();
  const roles = smiteGods.reduce((list: string[], smiteGod: SmiteGod) => {
    const roles = smiteGod.Roles.split(",").map((role: string) => role.trim());
    for (const role of roles) {
      if (!list.includes(role)) {
        list.push(role);
      }
    }
    return list;
  }, ["Any"]);
  return {
    props: {
      smiteGods,
      roles,
    },
  };
}
