import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image';
import { ChangeEvent, useState } from 'react';
import Card from '../components/card';
import Layout from '../components/layout';
import { BASE_URL } from '../config';
import { SmiteGod } from '../models/smite.god';
import styles from '../styles/Home.module.css'

export interface HomeProps {
  smiteGods: SmiteGod[];
  roles: string[];
}

const Home: NextPage<HomeProps> = ({ smiteGods, roles }) => {
  const cardCount: number = 5;
  const defaultIndices: number[] = []
  for (let i = 0; i < cardCount; i++) {
    defaultIndices.push(i);
  }
  const [indices, setIndices] = useState<number[]>(defaultIndices);
  const [role, setRole] = useState("Any");


  const randomizeAll = () => {
    const available = smiteGods.reduce((indices: number[], smiteGod: SmiteGod, smiteGodIndex: number) => {
      const isValidRole: boolean = role === "Any" || smiteGod.Roles.includes(role);
      const isNotChosen: boolean = !indices.includes(smiteGodIndex);
      if (isValidRole && isNotChosen) {
        indices.push(smiteGodIndex);
      }
      return indices;
    }, []);

    const randomIndices: number[] = [];
    for (let i = 0; i < cardCount; i++) {
      let randomIndex: number;
      do {
        randomIndex = Math.floor(Math.random() * available.length);
      } while (randomIndices.includes(randomIndex));
      randomIndices.push(available[randomIndex]);
    }
    setIndices(randomIndices);
  }

  const onChangeRole = (event: ChangeEvent<HTMLSelectElement>) => setRole(event.target.value);

  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <div className={styles.cards}>
          {indices.map((smiteGodIndex: number) => {
            const { Name, godCard_URL, Title, Pantheon}: SmiteGod = smiteGods[smiteGodIndex];
            return (
              <Card key={Name}>
                <Card.Front>
                  <Image src="/hexagons.svg" alt="Hexagon Pattern SVG" layout="fill" objectFit="cover" />
                </Card.Front>
                <Card.Back>
                  <Card.Background imageURL={godCard_URL}>
                    <div className={styles.content}>
                      <h1>{Name}</h1>
                      <p>{Title}</p>
                      <p>{Pantheon}</p>
                    </div>
                  </Card.Background>
                </Card.Back>
              </Card>
            );
          })}
        </div>
          <button type="button" onClick={randomizeAll}>Randomize</button>
          <select name="role" id="role" onChange={onChangeRole} defaultValue={role}>
            {roles.map((role: string) => (
              <option key={role} value={role}>{role}</option>
            ))}
          </select>
    </Layout>
  );
}

export default Home

export async function getStaticProps() {
  const res = await fetch(`${BASE_URL}/api/smite/gods`);
  const smiteGods = await res.json();
  const roles = smiteGods.reduce((list: string[], smiteGod: SmiteGod) => {
    const roles = smiteGod.Roles.split(",").map((role: string) => role.trim());
    for (const role of roles) {
      if (!list.includes(role)) {
        list.push(role);
      }
    }
    return list;
  }, ["Any"]);
  return {
    props: {
      smiteGods,
      roles,
    },
  };
}
